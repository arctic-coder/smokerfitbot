from aiogram import Bot, Dispatcher, types, executor
from dotenv import load_dotenv
import os

load_dotenv()
bot = Bot(token=os.getenv("BOT_TOKEN"))
dp = Dispatcher(bot)

@dp.message_handler(commands=['start'])
async def start_handler(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –æ—Ç –§–∏–∑–∫—É–ª—å—Ç—É—Ä—ã –∫—É—Ä–∏–ª—å—â–∏–∫–∞ üèãÔ∏è‚Äç‚ôÄÔ∏è\n–ù–∞–ø–∏—à–∏ /go —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å.")

@dp.message_handler(commands=['go'])
async def go_handler(message: types.Message):
    await message.answer("–ö–∞–∫–æ–π —É –≤–∞—Å —É—Ä–æ–≤–µ–Ω—å –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏?\n\n1Ô∏è‚É£ –ù–æ–≤–∏—á–æ–∫\n2Ô∏è‚É£ 1‚Äì2 –≥–æ–¥–∞\n3Ô∏è‚É£ 3+ –ª–µ—Ç\n(–ø–æ–∫–∞ —Ç–æ–ª—å–∫–æ —Ç–µ—Å—Ç–∏—Ä—É–µ–º!)")

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True) #start endless cycle waiting for input